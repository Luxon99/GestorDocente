/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestion_docente.visual.StudentVisual;

import gestion_docente.dto.*;
import gestion_docente.services.GroupServices;
import gestion_docente.services.ServicesLocator;
import javax.swing.JOptionPane;
import gestion_docente.services.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author César
 */
public class CreateStudent extends javax.swing.JFrame {

    /**
     * Creates new form CreateStudent
     */
    public CreateStudent() {

        initComponents();
        try {
            cargarAnio();
            cargarGrupos();
            cargarMunicipios();
        } catch (SQLException ex) {
            Logger.getLogger(CreateStudent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namesTextField = new javax.swing.JTextField();
        surnamesTextField = new javax.swing.JTextField();
        sexComboBox = new javax.swing.JComboBox<>();
        groupComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        academicYearComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        municipalityComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserción de estudiantes");

        jLabel1.setText("Nombres");

        jLabel2.setText("Apellidos");

        jLabel3.setText("Sexo:");

        jLabel4.setText("Municipio");

        jLabel5.setText("Grupo");

        namesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesTextFieldActionPerformed(evt);
            }
        });

        sexComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));

        jLabel6.setText("Año académico");

        academicYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                academicYearComboBoxActionPerformed(evt);
            }
        });

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(groupComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sexComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(surnamesTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namesTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(academicYearComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(municipalityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namesTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(surnamesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(municipalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(academicYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(groupComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namesTextFieldActionPerformed
    /**
     * Metodo que permite crear e insertar en la Base de datos Al nuevo
     * estudiante Con los datos pasados a los jTextField correspondientes
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //obtener conexion a la base de datos
        StudentServices ss = ServicesLocator.getStudentServices();
        try {
            //Obtengo los datos que se necesitan para insertar un estudiante
            String name = namesTextField.getText();//pidiendoselo a cada text field o combo box correspondiente
            String surname = surnamesTextField.getText();
            boolean isMasculino = false;
            if (sexComboBox.getSelectedItem().toString().equals("Masculino")) {
                isMasculino = true;
            }
            String municipality = municipalityComboBox.getSelectedItem().toString();


            /*TODO hay que hacer un metodo que devuelva el id del grupo correspondiente al señalado por el usuario en la interfaz*/
            GroupServices gs = ServicesLocator.getGroupServices();
            int year = Integer.parseInt(academicYearComboBox.getSelectedItem().toString());
            int num_group = Integer.parseInt(groupComboBox.getSelectedItem().toString());
            int id_group = gs.getIdGroup(year,num_group);//obtengo el id del grupo para pasarlo por parametros
            
            //se le pasa cero al id porque en un final el id es serial plq es insertado autmaticamente
            boolean insertar = ss.insert_object(StudentServices.INSERT_STUDENT,StudentServices.PARAM_STUDENT, new StudentDTO(0,name,surname,isMasculino,municipality,id_group));

            if (insertar) {
                JOptionPane.showMessageDialog(null, "Estudiante creado e insertado correctamente");
            } else {
                JOptionPane.showMessageDialog(null, "Estudiante no fue creado e insertado correctamente");
            }

        } /*catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocurrió una excepción SQLExcepcion");*/ catch (Exception ex3) {
            JOptionPane.showMessageDialog(null, ex3);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void academicYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_academicYearComboBoxActionPerformed
       // TODO add your handling code here:
       try{
           cargarGrupos();
       
       }catch(SQLException ex){
           
       }
    }//GEN-LAST:event_academicYearComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateStudent().setVisible(true);
            }
        });

    }

    public void cargarGrupos() throws SQLException {
        StudentServices ss = ServicesLocator.getStudentServices();
        java.sql.Connection conex = ServicesLocator.getConnection();
        String consulta = "select distinct groups.num_group from groups where year=" + academicYearComboBox.getSelectedItem().toString();
        Statement stat = conex.createStatement();
        ResultSet rs = stat.executeQuery(consulta);

        String num_group;

        while (rs.next()) {
            num_group = rs.getString(1);
            groupComboBox.addItem(num_group);
        }

    }

    public void cargarAnio() throws SQLException {
        StudentServices ss = ServicesLocator.getStudentServices();
        java.sql.Connection conex = ServicesLocator.getConnection();
        String consulta = "select year from years;";
        Statement stat = conex.createStatement();
        ResultSet rs = stat.executeQuery(consulta);

        String year;

        while (rs.next()) {
            year = rs.getString(1);
            academicYearComboBox.addItem(year);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> academicYearComboBox;
    private javax.swing.JComboBox<String> groupComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> municipalityComboBox;
    private javax.swing.JTextField namesTextField;
    private javax.swing.JComboBox<String> sexComboBox;
    private javax.swing.JTextField surnamesTextField;
    // End of variables declaration//GEN-END:variables

    private void cargarMunicipios() {
       MunicipalitysServices ms = ServicesLocator.getMunicipalityServices();
        try {
            ArrayList<MunicipalityDTO> municipios = ms.getAllMunicipalities();
            
            for(MunicipalityDTO element: municipios){
                municipalityComboBox.addItem(element.getName_municipality());
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateStudent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
}
