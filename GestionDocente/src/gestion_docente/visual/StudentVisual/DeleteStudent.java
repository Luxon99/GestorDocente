/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestion_docente.visual.StudentVisual;

import gestion_docente.utils.Connection;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author CÃ©sar
 */
public class DeleteStudent extends javax.swing.JFrame {

    private ResultSet rs;

    /**
     * Creates new form DeleteStudent
     */
    public DeleteStudent() {
        initComponents();
        llenarComboBoxIds();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idsStudentsComboBox = new javax.swing.JComboBox<>();
        eliminarStudentButton = new javax.swing.JButton();
        cancelarStudentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id_Student");

        idsStudentsComboBox.setModel(new DefaultComboBoxModel(new String[]{}));
        idsStudentsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idsStudentsComboBoxActionPerformed(evt);
            }
        });

        eliminarStudentButton.setText("Eliminar");
        eliminarStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarStudentButtonActionPerformed(evt);
            }
        });

        cancelarStudentButton.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(eliminarStudentButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelarStudentButton)
                    .addComponent(idsStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idsStudentsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarStudentButton)
                    .addComponent(cancelarStudentButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarStudentButtonActionPerformed
        // TODO add your handling code here:
        try {
            Connection conexion = new Connection("localhost", "sigedo", "postgres", "postgres", "5432");
            java.sql.Connection miConexion = conexion.getConnection();
            
            String procedimientoDeleteStudent = "{call \"public\".\"delete_student\"(?)}";
            
            
            
            CallableStatement cs = miConexion.prepareCall(procedimientoDeleteStudent);
            cs.setInt(1, Integer.parseInt(idsStudentsComboBox.getSelectedItem().toString()));
            
            if (cs.execute()){
                JOptionPane.showMessageDialog(null,"Estudiante eliminado correctamente");
            }else{
                JOptionPane.showMessageDialog(null,"Estudiante no fue eliminado correctamente");
            }
            idsStudentsComboBox.setModel(new DefaultComboBoxModel(new String[]{}));//actualizo para q al llenar el comboBox no se repitan los ids de estudiantes
            llenarComboBoxIds();
            cs.close();
            miConexion.close();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio una excepcion" + ex);
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocurrio una excepcion" + ex2);
        }
    }//GEN-LAST:event_eliminarStudentButtonActionPerformed

    private void idsStudentsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idsStudentsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idsStudentsComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeleteStudent ds = new DeleteStudent();

                ds.setVisible(true);

            }
        });
    }

    public void llenarComboBoxIds() {

        try {

            Connection conexion = new Connection("localhost", "sigedo", "postgres", "postgres", "5432");

            java.sql.Connection miConexion = conexion.getConnection();
            String consulta = "SELECT \"public\".\"students\".\"id_student\" FROM \"public\".\"students\"";
            Statement miconsulta = miConexion.createStatement();
            rs = miconsulta.executeQuery(consulta);

            while (rs.next()) {
                idsStudentsComboBox.addItem(rs.getString("id_student"));
            }

            rs.close();
            miconsulta.close();
            miConexion.close();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio una excepcion" + ex);
        } catch (SQLException ex2) {
            JOptionPane.showMessageDialog(null, "Ocurrio una excepcion" + ex2);
        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarStudentButton;
    private javax.swing.JButton eliminarStudentButton;
    private javax.swing.JComboBox<String> idsStudentsComboBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
